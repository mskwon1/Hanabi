package board;

import java.util.ArrayList;
import java.util.Stack;

import entity.Card;
import entity.Color;

public class Deck {
	private Stack<Card> cards;
	private int count;
	
	public Deck() {
		this(DEFAULT_CARDS);
	}
	
	public Deck(ArrayList<Card> cards) {
		this.cards = new Stack<Card>();
	}
	
	public int getCount() {
		return this.count;
	}
	
	public Card getTopCard() {
		count--;
		return cards.pop();
	}
	
	public void shuffle() {
		ArrayList<Card> tempCards = new ArrayList<Card>();
		
		// 덱에 있는 카드를 tempCard에 옮기고
		while (!cards.isEmpty()) {
			tempCards.add(cards.pop());
		}
		
		// 랜덤 인덱스를 push
		while (!tempCards.isEmpty()) {
			int index = (int)(Math.random()*tempCards.size());
			cards.push(tempCards.remove(index));
		}
	}
	
	public void putCards(ArrayList<Card> newCards) {
		cards.addAll(newCards);
		this.count += newCards.size();
		
		shuffle();
	}
	
	public static void main(String[] args) {
		Deck testDeck = new Deck();
		ArrayList<Card> testCards = new ArrayList<Card>();
		
		for (int i=0;i<5;i++) {
			testCards.add(new Card(i,Color.valueOf("RED")));
		}
		
		testDeck.putCards(testCards);
		
		while (testDeck.getCount()>0) {
			System.out.println(testDeck.getTopCard());
		}
	}
}
